digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_dynamodb_table.terraform_state_lock" [label = "aws_dynamodb_table.terraform_state_lock", shape = "box"]
		"[root] aws_s3_bucket.terraform_state" [label = "aws_s3_bucket.terraform_state", shape = "box"]
		"[root] aws_s3_bucket_public_access_block.state" [label = "aws_s3_bucket_public_access_block.state", shape = "box"]
		"[root] output.outputs" [label = "output.outputs", shape = "note"]
		"[root] provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] var.env" [label = "var.env", shape = "note"]
		"[root] var.region" [label = "var.region", shape = "note"]
		"[root] aws_dynamodb_table.terraform_state_lock" -> "[root] provider.aws"
		"[root] aws_s3_bucket.terraform_state" -> "[root] provider.aws"
		"[root] aws_s3_bucket.terraform_state" -> "[root] var.env"
		"[root] aws_s3_bucket_public_access_block.state" -> "[root] aws_s3_bucket.terraform_state"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] aws_s3_bucket_public_access_block.state"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] output.outputs"
		"[root] output.outputs" -> "[root] aws_dynamodb_table.terraform_state_lock"
		"[root] output.outputs" -> "[root] aws_s3_bucket.terraform_state"
		"[root] provider.aws (close)" -> "[root] aws_dynamodb_table.terraform_state_lock"
		"[root] provider.aws (close)" -> "[root] aws_s3_bucket_public_access_block.state"
		"[root] provider.aws" -> "[root] var.region"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider.aws (close)"
	}
}

